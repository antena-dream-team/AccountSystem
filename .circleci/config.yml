version: 2.1

orbs:
    telegram_entry: woltsu/telegram@0.0.9
    telegram: uniqueck/telegram-orb@0.0.1

jobs:
  build:
    docker:
      - image: circleci/openjdk:11-jdk-stretch 
    
    steps:
      - checkout

      # Run SonarCloud
      - run:
        name: Analyze on SonarCloud
        command: mvn verify sonar:sonar

      # Download and cache dependencies
      - restore_cache:
          keys:
          - antena-project-backend-{{ checksum "pom.xml" }}
            
      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: antena-project-backend-{{ checksum "pom.xml" }}
        
      # package into a jar
      - run: mvn clean package 
      
      - run: 
            name: Login to Dockerhub
            command: docker login -u $DOCKER_USER -p $DOCKER_PASS

      - run:
            name: push image to Dockerhub
            command: mvn clean compile jib:build -Dimage=mateusmsouza4/antenas-project:$CIRCLE_BUILD_NUM

      # store raw contents of src code
      - store_artifacts:
          path: target/classes
          destination: antena-project-backend

      - telegram/status

  deploy_aws_ec2:
    machine:
      image: ubuntu-1604:201903-01
    
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a6:78:87:79:cf:d6:72:1d:92:96:10:2c:2c:db:d3:c2"

      - run:
          name: Executing the Deploy in AWS EC2 - Production Environment
          command: |
            ssh -A -o "StrictHostKeyChecking no" ec2-user@ec2-18-228-221-204.sa-east-1.compute.amazonaws.com "/bin/bash -c 'pwd && printenv'"

      - telegram/status
workflows:
  version: 2
  build:
      jobs:
        - telegram_entry/notify:
            context: ANTENA
            filters:
              branches:
                only:
                  - master
            message: "Starting CI/CD commit ${CIRCLE_SHA1} on ${CIRCLE_PROJECT_REPONAME} made by ${CIRCLE_USERNAME}"
            telegram-chat-id: TELEGRAM_CHAT_ID
            telegram-bot-token: TELEGRAM_BOT_TOKEN

            
        - build:
            context: SonarCloud

        - build:
            context: ANTENA
            requires:
              - telegram_entry/notify
            filters:
              branches:
                only:
                  - master
        # - deploy-approval:
        #     type: approval
        #     requires:
        #       - build
        #     filters:
        #       branches:
        #         only:
        #           - master
        - deploy_aws_ec2:
            context: ANTENA
            requires:
              - build
            filters:
              branches:
                only:
                 - master
